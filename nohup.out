2023-11-17 13:31:02,015 - telegram.ext.Application - INFO - Application started
2023-11-18 17:10:17,816 - telegram.ext.Updater - ERROR - Error while getting Updates: Bad Gateway
2023-11-18 17:10:17,816 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 640, in _network_loop_retry
    if not await action_cb():
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 345, in polling_action_cb
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 334, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 565, in get_updates
    updates = await super().get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 519, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 3562, in get_updates
    await self._post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 607, in _post
    return await self._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 347, in _do_post
    return await super()._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 635, in _do_post
    return await request.post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 168, in post
    result = await self._request_wrapper(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 329, in _request_wrapper
    raise NetworkError(description or "Bad Gateway")
telegram.error.NetworkError: Bad Gateway
2023-11-18 17:10:18,973 - telegram.ext.Updater - ERROR - Error while getting Updates: Bad Gateway
2023-11-18 17:10:18,973 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 640, in _network_loop_retry
    if not await action_cb():
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 345, in polling_action_cb
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 334, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 565, in get_updates
    updates = await super().get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 519, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 3562, in get_updates
    await self._post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 607, in _post
    return await self._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 347, in _do_post
    return await super()._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 635, in _do_post
    return await request.post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 168, in post
    result = await self._request_wrapper(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 329, in _request_wrapper
    raise NetworkError(description or "Bad Gateway")
telegram.error.NetworkError: Bad Gateway
2023-11-20 02:43:57,887 - telegram.ext.Updater - ERROR - Error while getting Updates: httpx.ReadError: 
2023-11-20 02:43:57,888 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_backends/anyio.py", line 34, in read
    return await self._stream.receive(max_bytes=max_bytes)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/anyio/streams/tls.py", line 198, in receive
    data = await self._call_sslobject_method(self._ssl_object.read, max_bytes)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/anyio/streams/tls.py", line 140, in _call_sslobject_method
    data = await self.transport_stream.receive()
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 1112, in receive
    raise self._protocol.exception from None
anyio.BrokenResourceError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 66, in map_httpcore_exceptions
    yield
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 366, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 268, in handle_async_request
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 251, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/connection.py", line 103, in handle_async_request
    return await self._connection.handle_async_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 133, in handle_async_request
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 111, in handle_async_request
    ) = await self._receive_response_headers(**kwargs)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 176, in _receive_response_headers
    event = await self._receive_event(timeout=timeout)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 212, in _receive_event
    data = await self._network_stream.read(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_backends/anyio.py", line 31, in read
    with map_exceptions(exc_map):
  File "/usr/lib/python3.10/contextlib.py", line 153, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ReadError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_httpxrequest.py", line 219, in do_request
    res = await self._client.request(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1617, in send
    response = await self._send_handling_auth(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 365, in handle_async_request
    with map_httpcore_exceptions():
  File "/usr/lib/python3.10/contextlib.py", line 153, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 83, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ReadError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 640, in _network_loop_retry
    if not await action_cb():
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 345, in polling_action_cb
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 334, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 565, in get_updates
    updates = await super().get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 519, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 3562, in get_updates
    await self._post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 607, in _post
    return await self._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 347, in _do_post
    return await super()._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 635, in _do_post
    return await request.post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 168, in post
    result = await self._request_wrapper(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 278, in _request_wrapper
    code, payload = await self.do_request(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_httpxrequest.py", line 243, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ReadError: 
2023-11-20 05:27:47,094 - telegram.ext.Updater - ERROR - Error while getting Updates: httpx.ReadError: 
2023-11-20 05:27:47,094 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_backends/anyio.py", line 34, in read
    return await self._stream.receive(max_bytes=max_bytes)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/anyio/streams/tls.py", line 198, in receive
    data = await self._call_sslobject_method(self._ssl_object.read, max_bytes)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/anyio/streams/tls.py", line 140, in _call_sslobject_method
    data = await self.transport_stream.receive()
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 1112, in receive
    raise self._protocol.exception from None
anyio.BrokenResourceError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 66, in map_httpcore_exceptions
    yield
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 366, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 268, in handle_async_request
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 251, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/connection.py", line 103, in handle_async_request
    return await self._connection.handle_async_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 133, in handle_async_request
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 111, in handle_async_request
    ) = await self._receive_response_headers(**kwargs)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 176, in _receive_response_headers
    event = await self._receive_event(timeout=timeout)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 212, in _receive_event
    data = await self._network_stream.read(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_backends/anyio.py", line 31, in read
    with map_exceptions(exc_map):
  File "/usr/lib/python3.10/contextlib.py", line 153, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ReadError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_httpxrequest.py", line 219, in do_request
    res = await self._client.request(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1617, in send
    response = await self._send_handling_auth(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 365, in handle_async_request
    with map_httpcore_exceptions():
  File "/usr/lib/python3.10/contextlib.py", line 153, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 83, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ReadError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 640, in _network_loop_retry
    if not await action_cb():
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 345, in polling_action_cb
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 334, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 565, in get_updates
    updates = await super().get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 519, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 3562, in get_updates
    await self._post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 607, in _post
    return await self._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 347, in _do_post
    return await super()._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 635, in _do_post
    return await request.post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 168, in post
    result = await self._request_wrapper(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 278, in _request_wrapper
    code, payload = await self.do_request(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_httpxrequest.py", line 243, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ReadError: 
2023-11-20 14:17:22,859 - telegram.ext.Updater - ERROR - Error while getting Updates: httpx.ReadError: 
2023-11-20 14:17:22,860 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_backends/anyio.py", line 34, in read
    return await self._stream.receive(max_bytes=max_bytes)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/anyio/streams/tls.py", line 198, in receive
    data = await self._call_sslobject_method(self._ssl_object.read, max_bytes)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/anyio/streams/tls.py", line 140, in _call_sslobject_method
    data = await self.transport_stream.receive()
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 1112, in receive
    raise self._protocol.exception from None
anyio.BrokenResourceError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 66, in map_httpcore_exceptions
    yield
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 366, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 268, in handle_async_request
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 251, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/connection.py", line 103, in handle_async_request
    return await self._connection.handle_async_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 133, in handle_async_request
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 111, in handle_async_request
    ) = await self._receive_response_headers(**kwargs)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 176, in _receive_response_headers
    event = await self._receive_event(timeout=timeout)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 212, in _receive_event
    data = await self._network_stream.read(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_backends/anyio.py", line 31, in read
    with map_exceptions(exc_map):
  File "/usr/lib/python3.10/contextlib.py", line 153, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ReadError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_httpxrequest.py", line 219, in do_request
    res = await self._client.request(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1617, in send
    response = await self._send_handling_auth(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 365, in handle_async_request
    with map_httpcore_exceptions():
  File "/usr/lib/python3.10/contextlib.py", line 153, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 83, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ReadError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 640, in _network_loop_retry
    if not await action_cb():
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 345, in polling_action_cb
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 334, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 565, in get_updates
    updates = await super().get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 519, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 3562, in get_updates
    await self._post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 607, in _post
    return await self._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 347, in _do_post
    return await super()._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 635, in _do_post
    return await request.post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 168, in post
    result = await self._request_wrapper(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 278, in _request_wrapper
    code, payload = await self.do_request(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_httpxrequest.py", line 243, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ReadError: 
2023-11-20 14:21:48,404 - telegram.ext.Updater - ERROR - Error while getting Updates: httpx.ReadError: 
2023-11-20 14:21:48,404 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_backends/anyio.py", line 34, in read
    return await self._stream.receive(max_bytes=max_bytes)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/anyio/streams/tls.py", line 198, in receive
    data = await self._call_sslobject_method(self._ssl_object.read, max_bytes)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/anyio/streams/tls.py", line 140, in _call_sslobject_method
    data = await self.transport_stream.receive()
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 1112, in receive
    raise self._protocol.exception from None
anyio.BrokenResourceError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 66, in map_httpcore_exceptions
    yield
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 366, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 268, in handle_async_request
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 251, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/connection.py", line 103, in handle_async_request
    return await self._connection.handle_async_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 133, in handle_async_request
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 111, in handle_async_request
    ) = await self._receive_response_headers(**kwargs)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 176, in _receive_response_headers
    event = await self._receive_event(timeout=timeout)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 212, in _receive_event
    data = await self._network_stream.read(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_backends/anyio.py", line 31, in read
    with map_exceptions(exc_map):
  File "/usr/lib/python3.10/contextlib.py", line 153, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ReadError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_httpxrequest.py", line 219, in do_request
    res = await self._client.request(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1617, in send
    response = await self._send_handling_auth(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 365, in handle_async_request
    with map_httpcore_exceptions():
  File "/usr/lib/python3.10/contextlib.py", line 153, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 83, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ReadError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 640, in _network_loop_retry
    if not await action_cb():
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 345, in polling_action_cb
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 334, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 565, in get_updates
    updates = await super().get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 519, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 3562, in get_updates
    await self._post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 607, in _post
    return await self._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 347, in _do_post
    return await super()._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 635, in _do_post
    return await request.post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 168, in post
    result = await self._request_wrapper(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 278, in _request_wrapper
    code, payload = await self.do_request(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_httpxrequest.py", line 243, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ReadError: 
2023-11-21 15:17:11,857 - telegram.ext.Updater - ERROR - Error while getting Updates: httpx.ReadError: 
2023-11-21 15:17:11,858 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_exceptions.py", line 10, in map_exceptions
    yield
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_backends/anyio.py", line 34, in read
    return await self._stream.receive(max_bytes=max_bytes)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/anyio/streams/tls.py", line 198, in receive
    data = await self._call_sslobject_method(self._ssl_object.read, max_bytes)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/anyio/streams/tls.py", line 140, in _call_sslobject_method
    data = await self.transport_stream.receive()
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/anyio/_backends/_asyncio.py", line 1112, in receive
    raise self._protocol.exception from None
anyio.BrokenResourceError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 66, in map_httpcore_exceptions
    yield
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 366, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 268, in handle_async_request
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/connection_pool.py", line 251, in handle_async_request
    response = await connection.handle_async_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/connection.py", line 103, in handle_async_request
    return await self._connection.handle_async_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 133, in handle_async_request
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 111, in handle_async_request
    ) = await self._receive_response_headers(**kwargs)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 176, in _receive_response_headers
    event = await self._receive_event(timeout=timeout)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_async/http11.py", line 212, in _receive_event
    data = await self._network_stream.read(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_backends/anyio.py", line 31, in read
    with map_exceptions(exc_map):
  File "/usr/lib/python3.10/contextlib.py", line 153, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpcore/_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ReadError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_httpxrequest.py", line 219, in do_request
    res = await self._client.request(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1530, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1617, in send
    response = await self._send_handling_auth(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1645, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1682, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_client.py", line 1719, in _send_single_request
    response = await transport.handle_async_request(request)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 365, in handle_async_request
    with map_httpcore_exceptions():
  File "/usr/lib/python3.10/contextlib.py", line 153, in __exit__
    self.gen.throw(typ, value, traceback)
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/httpx/_transports/default.py", line 83, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ReadError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 640, in _network_loop_retry
    if not await action_cb():
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 345, in polling_action_cb
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 334, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 565, in get_updates
    updates = await super().get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 519, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 3562, in get_updates
    await self._post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 607, in _post
    return await self._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 347, in _do_post
    return await super()._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 635, in _do_post
    return await request.post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 168, in post
    result = await self._request_wrapper(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 278, in _request_wrapper
    code, payload = await self.do_request(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_httpxrequest.py", line 243, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ReadError: 
2023-11-22 08:03:08,804 - telegram.ext.Updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2023-11-22 08:03:08,804 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 640, in _network_loop_retry
    if not await action_cb():
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 345, in polling_action_cb
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 334, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 565, in get_updates
    updates = await super().get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 519, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 3562, in get_updates
    await self._post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 607, in _post
    return await self._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 347, in _do_post
    return await super()._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 635, in _do_post
    return await request.post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 168, in post
    result = await self._request_wrapper(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 327, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2023-11-22 08:03:14,102 - telegram.ext.Updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2023-11-22 08:03:14,102 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 640, in _network_loop_retry
    if not await action_cb():
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 345, in polling_action_cb
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 334, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 565, in get_updates
    updates = await super().get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 519, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 3562, in get_updates
    await self._post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 607, in _post
    return await self._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 347, in _do_post
    return await super()._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 635, in _do_post
    return await request.post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 168, in post
    result = await self._request_wrapper(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 327, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2023-11-22 08:03:20,424 - telegram.ext.Updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2023-11-22 08:03:20,424 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 640, in _network_loop_retry
    if not await action_cb():
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 345, in polling_action_cb
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 334, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 565, in get_updates
    updates = await super().get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 519, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 3562, in get_updates
    await self._post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 607, in _post
    return await self._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 347, in _do_post
    return await super()._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 635, in _do_post
    return await request.post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 168, in post
    result = await self._request_wrapper(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 327, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2023-11-22 08:03:28,232 - telegram.ext.Updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2023-11-22 08:03:28,232 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 640, in _network_loop_retry
    if not await action_cb():
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 345, in polling_action_cb
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 334, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 565, in get_updates
    updates = await super().get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 519, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 3562, in get_updates
    await self._post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 607, in _post
    return await self._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 347, in _do_post
    return await super()._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 635, in _do_post
    return await request.post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 168, in post
    result = await self._request_wrapper(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 327, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2023-11-22 08:03:35,917 - telegram.ext.Updater - ERROR - Error while getting Updates: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
2023-11-22 08:03:35,917 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 640, in _network_loop_retry
    if not await action_cb():
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 345, in polling_action_cb
    raise exc
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_updater.py", line 334, in polling_action_cb
    updates = await self.bot.get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 565, in get_updates
    updates = await super().get_updates(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 519, in decorator
    result = await func(self, *args, **kwargs)  # skipcq: PYL-E1102
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 3562, in get_updates
    await self._post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 607, in _post
    return await self._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/ext/_extbot.py", line 347, in _do_post
    return await super()._do_post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/_bot.py", line 635, in _do_post
    return await request.post(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 168, in post
    result = await self._request_wrapper(
  File "/home/pako/Dev/pk/git/backend-20231/venv/lib/python3.10/site-packages/telegram/request/_baserequest.py", line 327, in _request_wrapper
    raise Conflict(message)
telegram.error.Conflict: Conflict: terminated by other getUpdates request; make sure that only one bot instance is running
